name: PR Visual Snapshot Update Bot
on:
  workflow_run:
    workflows: [PR Build]
permissions:
  actions: read
  contents: write
  issues: write
  pull-requests: write
jobs:
  pr-visual-snapshot-update-bot:
    if: ${{github.event.workflow_run.conclusion == 'success'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repo: ${{github.event.workflow_run.head_repository.full_name}}
          ref: ${{github.event.workflow_run.head_sha}}
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install Dependencies
        run: npm ci
      - name: Get PR Event
        id: get-pr-event
        uses: potiuk/get-workflow-origin@v1_5
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          sourceRunId: ${{github.event.workflow_run.id}}
      - name: Create Temp Directory for Diff Artifacts
        run: mkdir -p ${{runner.temp}}/artifacts/
      - name: Download Changes
        uses: actions/download-artifact@v4
        with:
          pattern: visual-snapshot-changes-*.diff
          path: ${{runner.temp}}/artifacts/
          run-id: ${{github.event.workflow_run.id}}
          github-token: ${{ github.token }}
      - name: Apply Changes
        id: apply-changes
        run: |
          # apply changes
          git apply ${{runner.temp}}/artifacts/visual-snapshot-changes-*.diff/visual-snapshot-changes-*.diff

          # delete unused screenshots
          npm run ts-node -- ./scripts/delete-unused-screenshots.ts
      - name: Check for Changes
        id: diff
        run: |
          git add .

          if git diff-index --quiet HEAD
          then
            echo "status=clean" >> $GITHUB_OUTPUT
          else
            echo "status=dirty" >> $GITHUB_OUTPUT
          fi
      - name: Push Changes
        if: ${{steps.diff.outputs.status == 'dirty'}}
        id: push-changes
        run: |
          repositoryUrl=${{github.server_url}}/${{github.repository}}.git
          updateBranchName=visual-snapshot-update/pr-${{steps.get-pr-event.outputs.pullRequestNumber}}

          # configure git
          git config user.name "GitHub"
          git config user.email "noreply@github.com"

          # commit changes
          git commit --message 'chore: update visual snapshots for `${{steps.get-pr-event.outputs.sourceHeadBranch}}`'

          # push changes
          git push $repositoryUrl HEAD:refs/heads/$updateBranchName --force

          # delete branch (it's not needed, only the commit needs to be in the repo)
          git push $repositoryUrl -d $updateBranchName

          # set commit-sha for next step
          echo "commit-sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Comment on the *base* PR (first-party only)
        uses: actions/github-script@v7
        with:
          script: |
            const wr = context.payload.workflow_run;
            if (!wr.pull_requests || !wr.pull_requests[0]) {
              core.info('No PR attached to triggering run. Skipping comment.');
              return;
            }
            const { owner, name } = wr.repository;   // base repo of the triggering run
            const issue_number = wr.pull_requests[0].number;
    
            const body = `
            This PR introduces visual changes: ${process.env.COMMIT_SHA}
            If these changes are intended and correct, please cherry-pick the above commit to this PR.
            
            \`\`\`
            git checkout ${wr.head_branch}
            git fetch https://github.com/${owner.login}/${name}.git ${process.env.COMMIT_SHA}
            git cherry-pick ${process.env.COMMIT_SHA}
            git push
            \`\`\`
            `.trim();
            await github.rest.issues.createComment({
              owner: owner.login,
              repo: name,
              issue_number,
              body,
            });
        env:
          COMMIT_SHA: ${{ steps.push-changes.outputs.commit-sha }}
      - name: Fail if Visual Snapshots Changed
        if: ${{steps.diff.outputs.status == 'dirty'}}
        run: exit 1
